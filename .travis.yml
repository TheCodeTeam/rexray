go_import_path: github.com/codedellemc/rexray

sudo: required

services:
  - docker

language: go

go:
  - 1.7.5
  - tip

env:
  global:
    - secure: "gOb/232zSil9xWQDNTEkAtSGwAiOicGLyMlOAA6AVQySHQpkctpC4C3r6dqPsM5BLgm+URR9IztxzNUke1cy4jbRz8o/aocryDdt9OoC0eDS+LSH2aqtvtebXgTy1TVD3QEo1vkyNDweeTx6oZb5setAQq3L9L68wuijku6nOXw=" # DOCKER_USER
    - secure: "YO6l1NOdaIguFbHHHbwAPFgXsIKDh61nGPEQHY6dFKGtkX2anB3THZ3ZsIHsmiuSjNiL+A1fHJqMq4+UBVxrEjpmhIR9oFCwKBVFLvMHSzs3cXQieMl5rhtVvUp5fks64Z1MfrxnvGpLNXqmfbyGFR5rMMTH/19q9lh3RPayprM=" # DOCKER_PASS
  matrix:
    - REXRAY_BUILD_TYPE=
    - REXRAY_BUILD_TYPE=client
    - REXRAY_BUILD_TYPE=agent
    - REXRAY_BUILD_TYPE=controller
    - REXRAY_BUILD_TYPE= DRIVERS=ebs
    - REXRAY_BUILD_TYPE= DRIVERS=s3fs
    - REXRAY_BUILD_TYPE= DRIVERS=scaleio

matrix:
  allow_failures:
    - go:  tip
  fast_finish: true

before_install:
  - if [ "$DRIVERS" != "" ]; then sudo apt-get update; fi
  - if [ "$DRIVERS" != "" ]; then sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-engine; fi
  - if [ "$DRIVERS" != "" ]; then docker --version; fi
  - git config --global 'url.https://gopkg.in/yaml.v1.insteadof' 'https://gopkg.in/yaml.v1/'
  - git config --global 'url.https://gopkg.in/yaml.v2.insteadof' 'https://gopkg.in/yaml.v2/'
  - git config --global 'url.https://gopkg.in/fsnotify.v1.insteadof' 'https://gopkg.in/fsnotify.v1/'
  - git config --global 'url.https://github.com/.insteadof' 'git://github.com/'
  - git config --global 'url.https://github.com/.insteadof' 'git@github.com:'
  - if [ "$DRIVERS" = "" ]; then go get github.com/onsi/gomega; fi
  - if [ "$DRIVERS" = "" ]; then go get github.com/onsi/ginkgo; fi
  - if [ "$DRIVERS" = "" ]; then go get golang.org/x/tools/cmd/cover; fi
  - make deps
  - make info

script:
  - make gometalinter-all
  - make -j build-libstorage
  - GOOS=linux GOARCH=amd64 make -j build
  - if [ "$REXRAY_BUILD_TYPE" = "" ]; then REXRAY_DEBUG=true $GOPATH/bin/rexray version; else REXRAY_DEBUG=true $GOPATH/bin/rexray-$REXRAY_BUILD_TYPE version; fi
  - make -j test

after_success:
  - if [ "$DRIVERS" = "" ]; then make -j cover; fi
  - if [ "$DRIVERS" = "" ]  && [ "$TRAVIS_GO_VERSION" = "$COVERED_GO_VERSION" ] && [ "$TRAVIS_OS_NAME" = "$BINTRAY_OS_NAME" ]; then make tgz; fi
  - if [ "$DRIVERS" = "" ]  && [ "$TRAVIS_GO_VERSION" = "$COVERED_GO_VERSION" ] && [ "$TRAVIS_OS_NAME" = "$BINTRAY_OS_NAME" ]; then make rpm; fi
  - if [ "$DRIVERS" = "" ]  && [ "$TRAVIS_GO_VERSION" = "$COVERED_GO_VERSION" ] && [ "$TRAVIS_OS_NAME" = "$BINTRAY_OS_NAME" ]; then make deb; fi
  - if [ "$DRIVERS" = "" ]  && [ "$TRAVIS_GO_VERSION" = "$COVERED_GO_VERSION" ] && [ "$TRAVIS_OS_NAME" = "$BINTRAY_OS_NAME" ]; then make bintray; fi
  - if [ "$REXRAY_BUILD_TYPE" = "" ] && [ "$DRIVERS" != "" ] && [ "$TRAVIS_GO_VERSION" = "$COVERED_GO_VERSION" ] && [ "$TRAVIS_OS_NAME" = "$BINTRAY_OS_NAME" ]; then make build-docker-plugin; fi
  - ls -al

deploy:
  - provider: bintray
    file: bintray-unstable.json
    user: $BINTRAY_USER
    key: $BINTRAY_KEY
    skip_cleanup: true
    on:
      all_branches: true
      condition: $DISABLE_BINTRAY != true && $TRAVIS_GO_VERSION = $COVERED_GO_VERSION && $TRAVIS_OS_NAME = $BINTRAY_OS_NAME && $TRAVIS_TAG =~ ^$ && ($TRAVIS_REPO_SLUG = 'codedellemc/rexray' || $IGNORE_REPO_SLUG_CONDITION = true) && ($TRAVIS_BRANCH = master || $IGNORE_BRANCH_CONDITION = true)

  - provider: bintray
    file: bintray-staged.json
    user: $BINTRAY_USER
    key: $BINTRAY_KEY
    skip_cleanup: true
    on:
      all_branches: true
      condition: $DISABLE_BINTRAY != true && $TRAVIS_GO_VERSION = $COVERED_GO_VERSION && $TRAVIS_OS_NAME = $BINTRAY_OS_NAME && $TRAVIS_TAG =~ -rc[[:digit:]]+$ && ($TRAVIS_REPO_SLUG = 'codedellemc/rexray' || $IGNORE_REPO_SLUG_CONDITION = true)

  - provider: bintray
    file: bintray-stable.json
    user: $BINTRAY_USER
    key: $BINTRAY_KEY
    skip_cleanup: true
    on:
      all_branches: true
      condition: $DISABLE_BINTRAY != true && $TRAVIS_GO_VERSION = $COVERED_GO_VERSION && $TRAVIS_OS_NAME = $BINTRAY_OS_NAME && $TRAVIS_TAG =~ ^v?[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]$ && ($TRAVIS_REPO_SLUG = 'codedellemc/rexray' || $IGNORE_REPO_SLUG_CONDITION = true)

  - provider: script
    script: make.sh push-docker-plugin unstable
    skip_cleanup: true
    on:
      all_branches: true
      condition: $DRIVERS != '' && $REXRAY_BUILD_TYPE = '' && $TRAVIS_GO_VERSION = $COVERED_GO_VERSION && $TRAVIS_OS_NAME = $BINTRAY_OS_NAME && $TRAVIS_TAG =~ ^$ && ($TRAVIS_REPO_SLUG = 'codedellemc/rexray' || $IGNORE_REPO_SLUG_CONDITION = true) && ($TRAVIS_BRANCH = master || $IGNORE_BRANCH_CONDITION = true)

  - provider: script
    script: make.sh push-docker-plugin staged
    skip_cleanup: true
    on:
      all_branches: true
      condition: $DRIVERS != '' && $REXRAY_BUILD_TYPE = '' && $TRAVIS_GO_VERSION = $COVERED_GO_VERSION && $TRAVIS_OS_NAME = $BINTRAY_OS_NAME && $TRAVIS_TAG =~ -rc[[:digit:]]+$ && ($TRAVIS_REPO_SLUG = 'codedellemc/rexray' || $IGNORE_REPO_SLUG_CONDITION = true)

  - provider: script
    script: make.sh push-docker-plugin stable
    skip_cleanup: true
    on:
      all_branches: true
      condition: $DRIVERS != '' && $REXRAY_BUILD_TYPE = '' && $TRAVIS_GO_VERSION = $COVERED_GO_VERSION && $TRAVIS_OS_NAME = $BINTRAY_OS_NAME && $TRAVIS_TAG =~ ^v?[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]$ && ($TRAVIS_REPO_SLUG = 'codedellemc/rexray' || $IGNORE_REPO_SLUG_CONDITION = true)

cache:
  apt: true
  directories:
  - $HOME/.opt

addons:
  apt:
    packages:
    - rpm
