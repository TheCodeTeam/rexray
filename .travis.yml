go_import_path: github.com/codedellemc/rexray

#sudo: required

#services:
#  - docker

language: go

go:
  - 1.8.1

env:
  - REXRAY_BUILD_TYPE= TRAVIS_GOARCH=amd64
#  - REXRAY_BUILD_TYPE= TRAVIS_GOARCH=arm
#  - REXRAY_BUILD_TYPE= TRAVIS_GOARCH=arm64
#  - REXRAY_BUILD_TYPE=client
#  - REXRAY_BUILD_TYPE=agent
#  - REXRAY_BUILD_TYPE=controller
#  - REXRAY_BUILD_TYPE= DRIVERS=ebs
#  - REXRAY_BUILD_TYPE= DRIVERS=efs
#  - REXRAY_BUILD_TYPE= DRIVERS=gcepd
#  - REXRAY_BUILD_TYPE= DRIVERS=isilon
#  - REXRAY_BUILD_TYPE= DRIVERS=s3fs
#  - REXRAY_BUILD_TYPE= DRIVERS=scaleio

before_install:
  - export GOARCH="${TRAVIS_GOARCH:-amd64}"
  - go env
  - if [ "$DRIVERS" != "" ]; then sudo apt-get update; fi
  - if [ "$DRIVERS" != "" ]; then sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-engine; fi
  - if [ "$DRIVERS" != "" ]; then docker --version; fi
  - git config --global 'url.https://gopkg.in/yaml.v1.insteadof' 'https://gopkg.in/yaml.v1/'
  - git config --global 'url.https://gopkg.in/yaml.v2.insteadof' 'https://gopkg.in/yaml.v2/'
  - git config --global 'url.https://gopkg.in/fsnotify.v1.insteadof' 'https://gopkg.in/fsnotify.v1/'
  - git config --global 'url.https://github.com/.insteadof' 'git://github.com/'
  - git config --global 'url.https://github.com/.insteadof' 'git@github.com:'
  - if [ "$DRIVERS" = "" ]; then go get github.com/onsi/gomega; fi
  - if [ "$DRIVERS" = "" ]; then go get github.com/onsi/ginkgo; fi
  - if [ "$DRIVERS" = "" ]; then go get golang.org/x/tools/cmd/cover; fi
  - make deps
  - PORCELAIN=1 make build-gopath-tarball && ls -al gopath*
  - export PROJECT_NAME="rexray"
  - export GOPATH_OLD="$GOPATH"
  - export GOPATH="/tmp/go"
  - mkdir -p "$GOPATH"/{bin,pkg,src}
  - mv "$GOPATH_OLD"/bin/* "$GOPATH"/bin/
  - export PATH="${GOPATH}/bin:${PATH}"
  - mkdir -p "$GOPATH"/src/github.com/codedellemc
  - rsync -ax vendor/ "$GOPATH"/src/ && rm -fr vendor
  - cd .. && mv "$PROJECT_NAME" "$GOPATH"/src/github.com/codedellemc/
  - cd "$GOPATH"/src/github.com/codedellemc/"$PROJECT_NAME"
  - make info

script:
  - make gometalinter-all
  - ./build.sh -x -a "$GOARCH" -b make
  - if [ "$REXRAY_BUILD_TYPE" = "" ]; then file rexray; else REXRAY_DEBUG=true file rexray-$REXRAY_BUILD_TYPE; fi
  - if [ "$GOARCH" = "amd64" ]; then if [ "$REXRAY_BUILD_TYPE" = "" ]; then REXRAY_DEBUG=true ./rexray version; else REXRAY_DEBUG=true ./rexray-$REXRAY_BUILD_TYPE version; fi; fi
  - if [ "$GOARCH" = "amd64" ]; then make -j test; fi

after_success:
  - if [ "$GOARCH" = "amd64" ] && [ "$DRIVERS" = "" ]; then make -j cover; fi
  - if [ "$GOARCH" = "amd64" ] && [ "$DRIVERS" = "" ]  && [ "$TRAVIS_OS_NAME" = "$BINTRAY_OS_NAME" ]; then make tgz; fi
  - if [ "$GOARCH" = "amd64" ] && [ "$DRIVERS" = "" ]  && [ "$TRAVIS_OS_NAME" = "$BINTRAY_OS_NAME" ]; then make rpm; fi
  - if [ "$GOARCH" = "amd64" ] && [ "$DRIVERS" = "" ]  && [ "$TRAVIS_OS_NAME" = "$BINTRAY_OS_NAME" ]; then make deb; fi
  - if [ "$GOARCH" = "amd64" ] && [ "$DRIVERS" = "" ]  && [ "$TRAVIS_OS_NAME" = "$BINTRAY_OS_NAME" ]; then make bintray; fi
  - if [ "$GOARCH" = "amd64" ] && [ "$REXRAY_BUILD_TYPE" = "" ] && [ "$DRIVERS" != "" ] && [ "$TRAVIS_OS_NAME" = "$BINTRAY_OS_NAME" ]; then make build-docker-plugin; fi
  - if [ "$GOARCH" = "amd64" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] && [ "$REXRAY_BUILD_TYPE" = "" ] && [ "$DRIVERS" != "" ] && [ "$TRAVIS_OS_NAME" = "$BINTRAY_OS_NAME" ]; then docker login -u $DOCKER_USER -p $DOCKER_PASS; fi
  - ls -al

deploy:
  - provider: bintray
    file: bintray-unstable.json
    user: $BINTRAY_USER
    key: $BINTRAY_KEY
    skip_cleanup: true
    on:
      all_branches: true
      condition: $GOARCH = 'amd64' && $DRIVERS = '' && $DISABLE_BINTRAY != true && $TRAVIS_OS_NAME = $BINTRAY_OS_NAME && $TRAVIS_TAG =~ ^$ && ($TRAVIS_REPO_SLUG = 'codedellemc/rexray' || $IGNORE_REPO_SLUG_CONDITION = true) && ($TRAVIS_BRANCH = master || $IGNORE_BRANCH_CONDITION = true)

  - provider: bintray
    file: bintray-staged.json
    user: $BINTRAY_USER
    key: $BINTRAY_KEY
    skip_cleanup: true
    on:
      all_branches: true
      condition: $GOARCH = 'amd64' && $DRIVERS = '' && $DISABLE_BINTRAY != true && $TRAVIS_OS_NAME = $BINTRAY_OS_NAME && $TRAVIS_TAG =~ -rc[[:digit:]]+$ && ($TRAVIS_REPO_SLUG = 'codedellemc/rexray' || $IGNORE_REPO_SLUG_CONDITION = true)

  - provider: bintray
    file: bintray-stable.json
    user: $BINTRAY_USER
    key: $BINTRAY_KEY
    skip_cleanup: true
    on:
      all_branches: true
      condition: $GOARCH = 'amd64' && $DRIVERS = '' && $DISABLE_BINTRAY != true && $TRAVIS_OS_NAME = $BINTRAY_OS_NAME && $TRAVIS_TAG =~ ^v?[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]$ && ($TRAVIS_REPO_SLUG = 'codedellemc/rexray' || $IGNORE_REPO_SLUG_CONDITION = true)

  - provider: script
    script: ./make.sh push-docker-plugin unstable
    skip_cleanup: true
    on:
      all_branches: true
      condition: $GOARCH = 'amd64' && $DRIVERS != '' && $REXRAY_BUILD_TYPE = '' && $TRAVIS_OS_NAME = $BINTRAY_OS_NAME && $TRAVIS_TAG =~ ^$ && ($TRAVIS_REPO_SLUG = 'codedellemc/rexray' || $IGNORE_REPO_SLUG_CONDITION = true) && ($TRAVIS_BRANCH = master || $IGNORE_BRANCH_CONDITION = true)

  - provider: script
    script: ./make.sh push-docker-plugin staged
    skip_cleanup: true
    on:
      all_branches: true
      condition: $GOARCH = 'amd64' && $DRIVERS != '' && $REXRAY_BUILD_TYPE = '' && $TRAVIS_OS_NAME = $BINTRAY_OS_NAME && $TRAVIS_TAG =~ -rc[[:digit:]]+$ && ($TRAVIS_REPO_SLUG = 'codedellemc/rexray' || $IGNORE_REPO_SLUG_CONDITION = true)

  - provider: script
    script: ./make.sh push-docker-plugin stable
    skip_cleanup: true
    on:
      all_branches: true
      condition: $GOARCH = 'amd64' && $DRIVERS != '' && $REXRAY_BUILD_TYPE = '' && $TRAVIS_OS_NAME = $BINTRAY_OS_NAME && $TRAVIS_TAG =~ ^v?[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]$ && ($TRAVIS_REPO_SLUG = 'codedellemc/rexray' || $IGNORE_REPO_SLUG_CONDITION = true)

cache:
  apt: true
  directories:
  - $HOME/.opt

addons:
  apt:
    packages:
    - rpm
    - debhelper
    - dpkg
    - dpkg-dev
